// <auto-generated />
using System;
using DinarInvestments.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DinarInvestments.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DinarInvestments.Domain.Models.Investment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<long>("InvestmentOpportunityId")
                        .HasColumnType("bigint");

                    b.Property<long>("InvestorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentOpportunityId");

                    b.HasIndex("InvestorId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("DinarInvestments.Domain.Models.InvestmentOpportunity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("MinimumInvestmentAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("InvestmentOpportunities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationDate = new DateTime(2025, 7, 14, 18, 42, 0, 64, DateTimeKind.Utc).AddTicks(4240),
                            MinimumInvestmentAmount = 1000m,
                            Name = "Real Estate Fund"
                        },
                        new
                        {
                            Id = 2L,
                            CreationDate = new DateTime(2025, 7, 14, 18, 42, 0, 64, DateTimeKind.Utc).AddTicks(5000),
                            MinimumInvestmentAmount = 500m,
                            Name = "Tech Growth Fund"
                        },
                        new
                        {
                            Id = 3L,
                            CreationDate = new DateTime(2025, 7, 14, 18, 42, 0, 64, DateTimeKind.Utc).AddTicks(5000),
                            MinimumInvestmentAmount = 250m,
                            Name = "SME Sukuk"
                        });
                });

            modelBuilder.Entity("DinarInvestments.Domain.Models.Investor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Investors");
                });

            modelBuilder.Entity("DinarInvestments.Domain.Models.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<long>("FromWalletId")
                        .HasColumnType("bigint");

                    b.Property<long>("InvestorId")
                        .HasColumnType("bigint");

                    b.Property<long>("ToWalletId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("FromWalletId");

                    b.HasIndex("InvestorId");

                    b.HasIndex("ToWalletId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DinarInvestments.Domain.Models.Wallet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<long>("InvestorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InvestorId");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("DinarInvestments.Domain.Models.Investment", b =>
                {
                    b.HasOne("DinarInvestments.Domain.Models.InvestmentOpportunity", null)
                        .WithMany()
                        .HasForeignKey("InvestmentOpportunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DinarInvestments.Domain.Models.Investor", null)
                        .WithMany("Investments")
                        .HasForeignKey("InvestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DinarInvestments.Domain.Models.Transaction", b =>
                {
                    b.HasOne("DinarInvestments.Domain.Models.Wallet", null)
                        .WithMany()
                        .HasForeignKey("FromWalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DinarInvestments.Domain.Models.Investor", null)
                        .WithMany("Transactions")
                        .HasForeignKey("InvestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DinarInvestments.Domain.Models.Wallet", null)
                        .WithMany()
                        .HasForeignKey("ToWalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DinarInvestments.Domain.Models.Wallet", b =>
                {
                    b.HasOne("DinarInvestments.Domain.Models.Investor", null)
                        .WithMany("Wallets")
                        .HasForeignKey("InvestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DinarInvestments.Domain.Models.Investor", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("Transactions");

                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
